cdef exit(code:int) -> ()

typeclass Object(T):
  def delete(self:T) -> ()

typeclass Concat(T):
  def operator++(a:T, b:T) -> T

typeclass Print(T):
  def to_string(x:T) -> string
  def print(x:T) -> ()
  def write(x:T) -> ()


typeclass Integer(T):
  def to_integer(x:T) -> int

typeclass Float(T):
  def to_float(x:T) -> float

def str(x) -> string: to_string(x)
def int(x) -> int: to_integer(x)
def float(x) -> float: to_float(x)

typeclass Eq(T):
  def operator==(a:T, b:T) -> bool
  def operator!=(a:T, b:T) -> bool

typeclass Ord(T):
  def operator>(a:T, b:T) -> bool
  def operator<(a:T, b:T) -> bool
  def operator>=(a:T, b:T) -> bool
  def operator<=(a:T, b:T) -> bool

typeclass Copy(T):
  def copy(x:T) -> T

class<a,b> pair:
  Pair(a, b)

typeclass BoundsCheck(T):
  def out_of_bounds(template:T)

class<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o> tuple:
  Tuple3(a, b, c)
  Tuple4(a, b, c, d)
  Tuple5(a, b, c, d, e)
  Tuple6(a, b, c, d, e, f)
  Tuple7(a, b, c, d, e, f, g)
  Tuple8(a, b, c, d, e, f, g, h)
  Tuple9(a, b, c, d, e, f, g, h, i)
  Tuple10(a, b, c, d, e, f, g, h, i, j)
  Tuple11(a, b, c, d, e, f, g, h, i, j, k)
  Tuple12(a, b, c, d, e, f, g, h, i, j, k, l)
  Tuple13(a, b, c, d, e, f, g, h, i, j, k, l, m)
  Tuple14(a, b, c, d, e, f, g, h, i, j, k, l, m, n)
  Tuple15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)

import bool
import math
import option
import vector
import string
import print
